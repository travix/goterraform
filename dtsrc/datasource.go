package dtsrc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/diag"
)

// Datasource required methods on datasource block.
//
// T is the protobuf message generated by protoc-gen-go.
type Datasource[T any] interface {
	// Read receive a context, a ReadRequest, a ReadResponse and a data object filled with the data from the datasource.
	// It should return the same or update data object updated or diag.Diagnostics if error occurs during the read.
	Read(ctx context.Context, req datasource.ReadRequest, resp *datasource.ReadResponse, data T) (T, diag.Diagnostics)
}

// CanMetadata optional interface to inject metadata method on datasource block.
type CanMetadata interface {
	Metadata(ctx context.Context, req datasource.MetadataRequest, resp *datasource.MetadataResponse)
}

// CanSchema optional interface to inject schema method on datasource block.
type CanSchema interface {
	Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse)
}

// CanConfigure optional interface to inject configure method on datasource block.
type CanConfigure interface {
	Configure(context.Context, datasource.ConfigureRequest, *datasource.ConfigureResponse)
}

// CanConfigValidators optional interface to inject config validators method on datasource block.
type CanConfigValidators interface {
	ConfigValidators(context.Context) []datasource.ConfigValidator
}

// CanValidateConfig optional interface to inject validate config method on datasource block.
type CanValidateConfig interface {
	ValidateConfig(context.Context, datasource.ValidateConfigRequest, *datasource.ValidateConfigResponse)
}
